import type { NormalizedGameConfiguration } from "../GameConfiguration";
import type { LoadGameConfigurationFunc } from "./types";
export declare type LoadConfigurationFunc = ReturnType<typeof makeLoadConfigurationFunc>;
export declare function makeLoadConfigurationFunc(loadConfiguration: LoadGameConfigurationFunc): (url: string, assetBase: string | undefined, cascadeBase: string | undefined, callback: (err: Error | null, conf?: NormalizedGameConfiguration | undefined) => void) => void;
/**
 * 与えられたオブジェクト二つを「マージ」する。
 * ここでマージとは、オブジェクトのフィールドをイテレートし、
 * プリミティブ値であれば上書き、配列であればconcat、オブジェクトであれば再帰的にマージする処理である。
 *
 * @param target マージされるオブジェクト。この値は破壊される
 * @param source マージするオブジェクト
 */
export declare function _mergeObject(target: any, source: any): any;
