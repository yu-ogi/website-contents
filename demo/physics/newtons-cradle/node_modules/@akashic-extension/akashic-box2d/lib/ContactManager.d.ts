import { Box2D, EBody } from "./";
/**
 * `ContactManager` のインスタンス生成時に指定するパラメータ。
 */
export interface ContactManagerParameter {
    /**
     * Box2D のインスタンス。
     */
    box2d: Box2D;
}
/**
 * 衝突判定を管理するクラス。
 */
export declare class ContactManager {
    /**
     * Box2D のインスタンス。
     */
    box2d: Box2D;
    private _beginContactTriggerMap;
    private _endContactTriggerMap;
    /**
     * `ContactManager` のインスタンスを生成する。
     * @param param `ContactManager` の生成オプション
     */
    constructor(param: ContactManagerParameter);
    /**
     * このクラスのインスタンスを破棄する。
     */
    destroy(): void;
    /**
     * このクラスのインスタンスが破棄済みであるかを返す。
     */
    destroyed(): boolean;
    /**
     * `EBody` 同士の接触開始を検出する `g.Trigger` を生成する。
     * @param bodyA 対象のボディ
     * @param bodyB 対象のボディ
     */
    createBeginContactTrigger(bodyA: EBody, bodyB: EBody): g.Trigger<void>;
    /**
     * `EBody` 同士の接触開始を検出する `g.Trigger` を削除する。
     * @param bodyA 対象のボディ
     * @param bodyB 対象のボディ
     */
    removeBeginContactTrigger(bodyA: EBody, bodyB: EBody): boolean;
    /**
     * `EBody` 同士の接触終了を検出する `g.Trigger` を生成する。
     * @param bodyA 対象のボディ
     * @param bodyB 対象のボディ
     */
    createEndContactTrigger(bodyA: EBody, bodyB: EBody): g.Trigger<void>;
    /**
     * `EBody` 同士の接触終了を検出する `g.Trigger` を削除する。
     * @param bodyA 対象のボディ
     * @param bodyB 対象のボディ
     */
    removeEndContactTrigger(bodyA: EBody, bodyB: EBody): boolean;
}
