"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultSkippingScene = void 0;
var CameraCancellingE_1 = require("./entities/CameraCancellingE");
var FilledRect_1 = require("./entities/FilledRect");
var Scene_1 = require("./Scene");
/**
 * @ignore
 */
function easeInOutQuad(t, b, c, d) {
    t /= d / 2;
    if (t < 1)
        return (c / 2) * t * t + b;
    --t;
    return (-c / 2) * (t * (t - 2) - 1) + b;
}
/**
 * @ignore
 */
function easingInOutQuadWithSaturation(t, b, c, d) {
    var threshold = d * 0.15;
    return 0 < t && t < threshold ? easeInOutQuad(t, b, c, threshold) : b + c;
}
/**
 * @ignore
 */
var EasingFilledRect = /** @class */ (function (_super) {
    __extends(EasingFilledRect, _super);
    function EasingFilledRect(param) {
        var _this = _super.call(this, param) || this;
        _this.age = 0;
        _this.offsetDurationFrame = param.offsetDurationFrame;
        _this.easingDurationFrame = param.easingDurationFrame;
        _this.valueFrom = param.valueFrom;
        _this.valueTo = param.valueTo;
        _this.easing = param.easing;
        _this.onUpdate.add(_this._incrementAge, _this);
        _this.onUpdate.add(_this._updateColor, _this);
        return _this;
    }
    EasingFilledRect.prototype._incrementAge = function () {
        this.age++;
    };
    EasingFilledRect.prototype._updateColor = function () {
        var cssColor = this._calculateCSSColor();
        if (this.cssColor !== cssColor) {
            this.cssColor = cssColor;
            this.modified();
        }
    };
    EasingFilledRect.prototype._calculateCSSColor = function () {
        var _a = this, age = _a.age, offsetDurationFrame = _a.offsetDurationFrame, easingDurationFrame = _a.easingDurationFrame, valueFrom = _a.valueFrom, valueTo = _a.valueTo, easing = _a.easing;
        var t = Math.max(age - offsetDurationFrame, 0) % easingDurationFrame;
        var b = valueFrom;
        var c = valueTo - valueFrom;
        var d = easingDurationFrame;
        var col = easing(t, b, c, d);
        return "rgb(".concat(col, ", ").concat(col, ", ").concat(col, ")");
    };
    return EasingFilledRect;
}(FilledRect_1.FilledRect));
/**
 * デフォルトスキッピングシーン。
 *
 * `Game#_defaultSkippingScene` の初期値として利用される。
 */
var DefaultSkippingScene = /** @class */ (function (_super) {
    __extends(DefaultSkippingScene, _super);
    /**
     * `DefaultSkippingScene` のインスタンスを生成する。
     * @param param 初期化に用いるパラメータのオブジェクト
     */
    function DefaultSkippingScene(param) {
        var _this = _super.call(this, { game: param.game, local: "full-local", name: "akashic:default-skipping-scene" }) || this;
        if (param.style === "indicator") {
            _this.onLoad.addOnce(_this._handleLoadForIndicator, _this);
        }
        return _this;
    }
    /**
     * @private
     */
    DefaultSkippingScene.prototype._handleLoadForIndicator = function () {
        var _this = this;
        var game = this.game;
        var rectSize = (Math.min(game.width, game.height) * 0.03) | 0;
        var margin = (Math.min(game.width, game.height) * 0.03) | 0;
        var marginRight = (Math.min(game.width, game.height) * 0.05) | 0;
        var marginBottom = (Math.min(game.width, game.height) * 0.05) | 0;
        var offsetDurationFrame = 400 / (1000 / game.fps);
        var easingDurationFrame = 2500 / (1000 / game.fps);
        var valueFrom = 255 - 50;
        var valueTo = 255;
        var easing = easingInOutQuadWithSaturation;
        this.append(new CameraCancellingE_1.CameraCancellingE({
            scene: this,
            children: [3, 2, 1, 0].map(function (offsetIndex, i) {
                return new EasingFilledRect({
                    scene: _this,
                    cssColor: "rgb(".concat(valueTo, ", ").concat(valueTo, ", ").concat(valueTo, ")"),
                    width: rectSize,
                    height: rectSize,
                    x: game.width - i * (rectSize + margin) - marginRight,
                    y: game.height - marginBottom,
                    anchorX: 1,
                    anchorY: 1,
                    offsetDurationFrame: offsetDurationFrame * offsetIndex,
                    easingDurationFrame: easingDurationFrame,
                    valueFrom: valueFrom,
                    valueTo: valueTo,
                    easing: easing
                });
            })
        }));
    };
    return DefaultSkippingScene;
}(Scene_1.Scene));
exports.DefaultSkippingScene = DefaultSkippingScene;
