import * as aps from "./aps";
import type { AlphaBlendMode } from ".";
export interface EmitterParameterObject extends aps.EmitterParameterObject {
    parentIndex: number;
    userData: {
        skinName: string;
        cellName: string;
        alphaBlendMode: AlphaBlendMode;
    };
}
export interface EffectParameterObject {
    name: string;
    emitterParameters: EmitterParameterObject[];
    /**
     * 0 ~ 1 の値を返すランダム関数。
     *
     * パーティクル放出時などに用いられる。
     * 省略された時、akashic-animationの抱え持つランダム関数が用いられる。
     * またリプレイやマルチプレイにおいてパーティクルの状態は一致しなくなる。
     */
    randomFunc?: () => number;
}
export interface Effect {
    name: string;
    particleSystem: aps.ParticleSystem;
}
export declare enum EmitterOperation {
    start = 0,
    stop = 1,
    pause = 2
}
export interface EffectValue {
    emitterOp: EmitterOperation;
}
export declare function createEffect(effParam: EffectParameterObject): Effect;
